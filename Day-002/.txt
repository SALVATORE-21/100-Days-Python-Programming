-- Subscripting
print("Hello"[0]) - prints the charecter present in the index 0
Ans:H

-- String
print("123"+"456") - Concatenates the strings instead of mathematical addition
Ans:123456

-- Integr
print(123456) - Prints the number
print(123+456) - Ans:579

--Large Integers
Generally represented in the format: 123,456,789
Can be represented as 123_456_789 for computer to understand it as - 123456789

-- Float [3.4456]
-- Boolean [True(1),Fasle(0)]
print(True)
print(False)

============================================================================================================================================

-- To verify the datatype of an entity
print(type(Any piece of data to verify))
print(type(123)) -- <class "int">
print(type(123.45)) -- <class "Float">
print(type(True)) -- <class "bool">
print(type("Arya")) -- <class "str">

-- Type Conversion
a = int("123") -- converts string to Integer
print(type(a)) -- Integers

b = int("abc") -- Value Error i.e invalid literal for int() with base10
str()
bool()
float()

========================================================================================================================================
-- mathematical operations

/ - Float
// - Rounded Integer

print(5/3) - 1.666666666666666667
print(5//3) - 1
print(5*3) - 15
print(5+3) - 8
print(5-3) - 2
print(5**3) - 125

Order of operator priority
() > ** > * or / > + > -

3 * 3 + 3 / 3 - 3
9 + 3 /3 - 3
9 + 1 - 3
10 - 3
7

-- Always move from left to right prioritising the operators.
round(number,n_digits_to_roundoff the number) - Function to round off the decimal places to certain count.

-- Assignment calculator
a = a + 1 can be written as a += 1

-- f string
This feature allows a possibility to involve variables as part of a string.
name = " "
city = " "
The above two variables can be made part as
print(f"My self is {name} and i live in {city}")